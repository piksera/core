import _extends from"@babel/runtime/helpers/extends";import _defineProperty from"@babel/runtime/helpers/defineProperty";function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){_defineProperty(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}import React,{useEffect,useRef}from"react";import{Ellipse,Image,Rect,Transformer}from"react-konva";import Konva from"konva";import{useStore}from"../../../hooks";import{SET_CROP,SET_FEEDBACK}from"../../../actions";import{CUSTOM_CROP,ELLIPSE_CROP,FEEDBACK_STATUSES,ORIGINAL_CROP,TOOLS_IDS}from"../../../utils/constants";import{boundDragging,boundResizing}from"./cropAreaBounding";var isFirstRenderCropUpdated=!1,CropTransformer=function(){var a=useStore(),b=a.dispatch,c=a.theme,d=a.designLayer,e=a.originalImage,f=a.shownImageDimensions,g=a.adjustments,h=void 0===g?{}:g,i=h.crop,j=void 0===i?{}:i,k=h.isFlippedX,l=h.isFlippedY,m=a.resize,n=void 0===m?{}:m,o=a.config,p=a.t,q=useRef(),r=useRef(),s=useRef(),t=useRef(),u=o[TOOLS_IDS.CROP],v=j.ratio||u.ratio,w=v===CUSTOM_CROP,z=v===ELLIPSE_CROP,A=function(){return v===ORIGINAL_CROP?e.width/e.height:v},B=function(a,c){var d=a.width,e=a.height,g=a.x,h=a.y,i={x:k?f.width-g-d:g,y:l?f.height-h-e:h,width:d,height:e},m=j.width>=n.width&&j.height>=n.height;n.width&&n.height&&(d<n.width||e<n.height)&&m&&b({type:SET_FEEDBACK,payload:{feedback:{message:p("cropSizeLowerThanResizedWarning"),status:FEEDBACK_STATUSES.WARNING}}}),b({type:SET_CROP,payload:_objectSpread(_objectSpread(_objectSpread({},j),i),{},{dismissHistory:c})})},C=function(a,b){var c,d;r.current&&q.current&&r.current.nodes([q.current]);var e=t.current,f={width:a,height:b,x:null!==(c=j.x)&&void 0!==c?c:0,y:null!==(d=j.y)&&void 0!==d?d:0};B(boundResizing(f,f,_objectSpread(_objectSpread({},e),{},{abstractX:0,abstractY:0}),!(w||z)&&A(),u),!0)};if(useEffect(function(){return d&&r.current&&q.current&&(s.current&&s.current.cache(),r.current.nodes([q.current])),function(){s.current&&s.current.clearCache()}},[d,e,f]),useEffect(function(){if(t.current){var a,b,c=t.current;C(null!==(a=j.width)&&void 0!==a?a:c.width,null!==(b=j.height)&&void 0!==b?b:c.height)}},[v]),useEffect(function(){r.current&&q.current&&t.current&&j.width&&j.height&&C(j.width,j.height)},[u,f.width,f.height]),useEffect(function(){if(f&&(t.current=f,!isFirstRenderCropUpdated&&v&&f.x&&f.width)){var a,b;C(null!==(a=j.width)&&void 0!==a?a:f.width,null!==(b=j.height)&&void 0!==b?b:f.height),isFirstRenderCropUpdated=!0}},[f]),!d)return null;var D,E=w||z?void 0:["top-left","bottom-left","top-right","bottom-right"],F=function(a){var b=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1];a.target&&B({width:a.target.width()*a.target.scaleX(),height:a.target.height()*a.target.scaleY(),x:a.target.x(),y:a.target.y()},b)};if(!j.width&&!j.height){var G=1>f.scaledBy?f.scaledBy:1,H=_objectSpread(_objectSpread({},f),{},{width:f.width/G,height:f.height/G});D=boundResizing(H,_objectSpread(_objectSpread({},H),{},{x:0,y:0}),_objectSpread(_objectSpread({},H),{},{abstractX:0,abstractY:0}),!(w||z)&&A(),u)}else D=j;var I=D,J=I.x,K=void 0===J?0:J,x=I.y,L=void 0===x?0:x,y=I.width,M=I.height,N={x:k?f.width-K-y:K,y:l?f.height-L-M:L,ref:q,fill:"#FFFFFF",scaleX:1,scaleY:1,globalCompositeOperation:"destination-out",onDragEnd:F,onDragMove:function limitDragging(a){var b=a.target;b.setAttrs(boundDragging(b.attrs,t.current))},onTransformEnd:F,draggable:!0};return React.createElement(React.Fragment,null,React.createElement(Image,{image:e,x:k?f.width:0,y:l?f.height:0,width:f.width,height:f.height,filters:[Konva.Filters.Blur,Konva.Filters.Brighten],blurRadius:10,brightness:-.3,scaleX:k?-1:1,scaleY:l?-1:1,ref:s}),z?React.createElement(Ellipse,_extends({},N,{radiusX:y/2,radiusY:M/2,offset:{x:-y/2,y:-M/2}})):React.createElement(Rect,_extends({},N,{width:y,height:M})),React.createElement(Transformer,{centeredScaling:!1,flipEnabled:!1,rotateEnabled:!1,nodes:q.current?[q.current]:[],anchorSize:14,anchorCornerRadius:7,enabledAnchors:E,ignoreStroke:!1,anchorStroke:c.palette["accent-primary"],anchorFill:c.palette["access-primary"],anchorStrokeWidth:2,borderStroke:c.palette["accent-primary"],borderStrokeWidth:2,borderDash:[4],keepRatio:!w||!z,ref:r,boundBoxFunc:function boundBoxFunc(a,b){return boundResizing(a,b,t.current,!(w||z)&&A(),u)}}))};export default CropTransformer;