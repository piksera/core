import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["checked", "onChange", "checkBoxProps", "readOnly", "disabled"];
import React from 'react';
import PT from 'prop-types';
import CheckBoxIcon from '@scaleflex/icons/check-box';
import CheckBoxUncheckedIcon from '@scaleflex/icons/check-box-unchecked';
import { intrinsicComponent } from '../../utils/functions';
import Styled from './check-box.styles';
var CheckBox = intrinsicComponent(function (_ref, ref) {
  var checked = _ref.checked,
      onChange = _ref.onChange,
      checkBoxProps = _ref.checkBoxProps,
      readOnly = _ref.readOnly,
      disabled = _ref.disabled,
      rest = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement(Styled.CheckBox, _extends({
    disabled: Boolean(disabled),
    ref: ref
  }, rest), /*#__PURE__*/React.createElement(Styled.Input, _extends({
    checked: checked,
    disabled: disabled,
    onChange: readOnly || disabled ? undefined : onChange
  }, checkBoxProps)), checked ? /*#__PURE__*/React.createElement(CheckBoxIcon, null) : /*#__PURE__*/React.createElement(CheckBoxUncheckedIcon, null));
});
CheckBox.defaultProps = {
  checked: false
};
CheckBox.propTypes = {
  checked: PT.bool,
  onChange: PT.func,
  checkBoxProps: PT.object,
  readOnly: PT.bool,
  disabled: PT.bool
};
export default CheckBox;